services:

  # PostgreSQL Database
  postgres:
    image: postgres:16
    hostname: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ETL Script Loader
  loadgen:
    build:
      context: .
      dockerfile: src/scripts/Dockerfile
    container_name: loadgen
    init: true
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env

  # Adminer for DB Management
  adminer:
    image: adminer:4.8.1
    container_name: adminer
    platform: linux/amd64
    hostname: adminer
    restart: always
    ports:
      - 7775:8080
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: postgres
      ADMINER_DEFAULT_DB_NAME: postgres

  # Metabase for Analytics
  metabase:
    # platform: linux/x86_64
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    volumes:
      - ./metabase-data:/metabase-data
      - ./plugins:/plugins
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db
    restart: always


  # PostgreSQL Exporter for Monitoring
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: "postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/${DB_NAME}?sslmode=disable"
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9187:9187"

  # Prometheus for Metrics Collection
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always


  # Grafana for Visualization
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=${GF_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${GF_PASSWORD}
    restart: always

  marquez:
    image: marquezproject/marquez:latest
    container_name: marquez
    ports:
      - "5002:5000"
    environment:
      - MARQUEZ_DB_USER=postgres
      - MARQUEZ_DB_PASSWORD=postgres
      - MARQUEZ_DB_HOST=postgres
      - MARQUEZ_DB_PORT=5432
      - MARQUEZ_NAMESPACE=etl_pipeline
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5002/api/v1/namespaces"]
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  db_data:
  grafana_data: