services:
  postgres:
    image: postgres:16
    hostname: postgres
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  loadgen:
    build:
      context: .
      dockerfile: src/scripts/Dockerfile
    container_name: loadgen
    init: true
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env


  adminer:
    image: adminer:4.8.1
    container_name: adminer
    platform: linux/amd64
    hostname: adminer
    restart: always
    ports:
      - 7775:8080
    environment:
      ADMINER_DEFAULT_DB_DRIVER: pgsql
      ADMINER_DEFAULT_DB_HOST: postgres
      ADMINER_DEFAULT_DB_NAME: postgres
  metabase:
    # platform: linux/x86_64
    image: metabase/metabase:latest
    container_name: metabase
    ports:
      - "3000:3000"
    volumes:
      - ./metabase-data:/metabase-data
      - ./plugins:/plugins
    environment:
      - MB_DB_FILE=/metabase-data/metabase.db
    restart: always

volumes:
  db_data: